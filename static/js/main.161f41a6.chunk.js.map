{"version":3,"sources":["Components/Header/Header.js","Course/Course.js","Components/Cart/Cart.js","Components/CourseContainer/CourseContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","bg","variant","expanded","Brand","href","src","width","height","className","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Form","inline","Button","Course","props","console","log","clickHandler","data","course_name","couse_image","author","price","domain_name","description","Card","style","Img","Body","Title","Subtitle","Text","onClick","Cart","courses","totalPrice","reduce","course","position","top","textAlign","length","toFixed","CourseContainer","useState","setCourses","puschasedCourses","setPuschasedCourses","useEffect","addToCourseCart","updatedPurchasedItems","Container","Row","Col","md","map","key","App","fluid","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.161f41a6.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Navbar, Nav, Form, Button} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expanded=\"xl\">\r\n                <Navbar.Brand href=\"#home\"><img src=\"https://images.milled.com/2017-07-18/K8Nx5AIGTmvTxf5v/R6lqJCdq_waw.png\" width=\"150\" height=\"40\" className=\"d-inline-block align-top\" alt=\"Brand logo\" /></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href=\"#home\">Home</Nav.Link>\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <Button variant=\"outline-success\">TRY IT FREE</Button>\r\n                        </Form>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Course = (props) => {\r\n    console.log(props.clickHandler);\r\n    const {course_name, couse_image, author, domain_name, price, description} = props.data;\r\n    console.log(props.data);\r\n\r\n    return (\r\n        <div >\r\n            <Card className=\"m-3 shadow\" style={{ width: '20rem' }}>\r\n                <Card.Img height=\"200px\" variant=\"top\" src={couse_image} />\r\n                <Card.Body>\r\n                    <Card.Title>{course_name}</Card.Title>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{author}</Card.Subtitle>\r\n                    <h4 className=\"text-info\">$ {price}</h4>\r\n                    <Card.Text>{description}</Card.Text>\r\n                    <Button onClick={() => props.clickHandler(props.data)} variant=\"danger\">Enroll Now</Button>\r\n                </Card.Body>\r\n            </Card>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Course;","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Cart = (props) => {\r\n\r\n    const courses = props.data;\r\n\r\n    const totalPrice = courses.reduce((totalPrice, course) => totalPrice + course.price, 0);\r\n\r\n    const cartStyle = {\r\n        position : 'sticky',\r\n        top:'0',\r\n        textAlign : 'left'\r\n    }\r\n\r\n    return (\r\n        <div style={cartStyle}>\r\n            <h3>Order Summery</h3>\r\n            <h4>Items Ordered : {courses.length}</h4>\r\n            <h4 className=\"text-danger\">Total Price: $ {totalPrice.toFixed(2)}</h4>\r\n            <br/>\r\n            <Button variant=\"success\">Review Order</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;","import React, { useState, useEffect } from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Course from '../../Course/Course';\r\nimport data from '../../fakeData/data.json'\r\nimport Cart from '../Cart/Cart';\r\n\r\nconst CourseContainer = () => {\r\n    const [courses, setCourses] = useState([]);\r\n    const [puschasedCourses, setPuschasedCourses] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCourses(data);\r\n    },[]);\r\n\r\n    const addToCourseCart = (courses) => {\r\n        const updatedPurchasedItems = [...puschasedCourses, courses];\r\n        setPuschasedCourses(updatedPurchasedItems);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row className=\"mt-3\">\r\n                    <Col md={8} className=\"d-flex flex-wrap\">\r\n                        {\r\n                            courses.map(course => <Course clickHandler={addToCourseCart} data={course} key={course.id}></Course>)\r\n                        }\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Cart data={puschasedCourses} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CourseContainer;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from 'react-bootstrap'\nimport Header from './Components/Header/Header';\nimport CourseContainer from './Components/CourseContainer/CourseContainer';\n\n\nfunction App() {\n  return (\n    <div>\n      <Header/>\n      <Container className=\"entryPoint\" fluid>\n        <CourseContainer/>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}